/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.pendaftaranmahasiswabaru;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Map;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Putra Nurhuda Makatita
 */
public class HomeScreen extends javax.swing.JFrame {

    private MahasiswaDataModel mahasiswaModel046 = new MahasiswaDataModel();
    private MahasiswaForm mahasiswaForm046 = new MahasiswaForm(this);

    public HomeScreen() {
        initComponents();
        displayList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        programTitle046 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mahasiswaTable046 = new javax.swing.JTable();
        addBtn046 = new javax.swing.JButton();
        editBtn046 = new javax.swing.JButton();
        deleteBtn046 = new javax.swing.JButton();
        searchField046 = new javax.swing.JTextField();
        searchLabel046 = new javax.swing.JLabel();
        sortByComboBox046 = new javax.swing.JComboBox<>();
        sortByLabel046 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        programTitle046.setText("Pendaftaraan Mahasiswa Baru");

        mahasiswaTable046.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null, null, null, null },
                        { null, null, null, null, null, null, null },
                        { null, null, null, null, null, null, null },
                        { null, null, null, null, null, null, null }
                },
                new String[] {
                        "No", "NIM", "Nama", "Jurusan", "Asal Sekolah", "Waktu Pendaftaran", "Waktu Penyuntingan"
                }) {
            boolean[] canEdit = new boolean[] {
                    false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        mahasiswaTable046.getTableHeader().setReorderingAllowed(false);

        jScrollPane1.setViewportView(mahasiswaTable046);
        if (mahasiswaTable046.getColumnModel().getColumnCount() > 0) {
            mahasiswaTable046.getColumnModel().getColumn(0).setPreferredWidth(10);
        }

        addBtn046.setText("Add");
        addBtn046.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtn046ActionPerformed(evt);
            }
        });

        editBtn046.setText("Edit");
        editBtn046.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtn046ActionPerformed(evt);
            }
        });

        deleteBtn046.setText("Delete");
        deleteBtn046.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtn046ActionPerformed(evt);
            }
        });

        searchField046.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchField046KeyReleased(evt);
            }
        });

        searchLabel046.setText("Search");

        sortByComboBox046.setModel(new javax.swing.DefaultComboBoxModel<>(
                new String[] { "NIM", "Nama", "Jurusan", "Asal Sekolah", "Waktu Pendaftaraan", "Waktu Penyuntingan" }));
        sortByComboBox046.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByComboBox046ActionPerformed(evt);
            }
        });

        sortByLabel046.setText("Sort by");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 659,
                                                Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                                .createSequentialGroup()
                                                .addComponent(addBtn046, javax.swing.GroupLayout.PREFERRED_SIZE, 73,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(6, 6, 6)
                                                .addComponent(editBtn046, javax.swing.GroupLayout.PREFERRED_SIZE, 73,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(deleteBtn046, javax.swing.GroupLayout.PREFERRED_SIZE, 73,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(sortByComboBox046,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 128,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(sortByLabel046,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 56,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(searchField046,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 127,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(searchLabel046,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 60,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(programTitle046)
                                .addGap(252, 252, 252)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(32, Short.MAX_VALUE)
                                .addComponent(programTitle046)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(searchLabel046))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(sortByLabel046)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(addBtn046)
                                        .addComponent(editBtn046)
                                        .addComponent(deleteBtn046)
                                        .addComponent(searchField046, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(sortByComboBox046, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchField046KeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_searchField046KeyReleased
        displayList();
    }// GEN-LAST:event_searchField046KeyReleased

    private void sortByComboBox046ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_sortByComboBox046ActionPerformed
        displayList();
    }// GEN-LAST:event_sortByComboBox046ActionPerformed

    private void addBtn046ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addBtn046ActionPerformed
        mahasiswaForm046.add();
    }// GEN-LAST:event_addBtn046ActionPerformed

    private void editBtn046ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editBtn046ActionPerformed
        mahasiswaForm046.update();
    }// GEN-LAST:event_editBtn046ActionPerformed

    private void deleteBtn046ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteBtn046ActionPerformed
        mahasiswaForm046.delete();
    }// GEN-LAST:event_deleteBtn046ActionPerformed

    public void jalan() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn046;
    private javax.swing.JButton deleteBtn046;
    private javax.swing.JButton editBtn046;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mahasiswaTable046;
    private javax.swing.JLabel programTitle046;
    private javax.swing.JTextField searchField046;
    private javax.swing.JLabel searchLabel046;
    private javax.swing.JComboBox<String> sortByComboBox046;
    private javax.swing.JLabel sortByLabel046;
    // End of variables declaration//GEN-END:variables

    public void displayList() {
        String sortBy046 = sortByComboBox046.getSelectedItem().toString();
        String search046 = searchField046.getText();
        displayList(sortBy046, search046);
    }

    public void displayList(String sortBy, String search) {
        ArrayList<Map<String, String>> data046 = mahasiswaModel046.getData();
        if (data046 == null || data046.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Data masih kosong.");
            return; // atau tampilkan pesan: "Data kosong"
        }

        if (sortBy.equals("NIM")) {
            data046 = sortByNim(data046);
        } else if (sortBy.equals("Nama")) {
            data046 = sortByNama(data046);
        } else if (sortBy.equals("Jurusan")) {
            data046 = sortByJurusan(data046);
        } else if (sortBy.equals("Asal Sekolah")) {
            data046 = sortByAsalSekolah(data046);
        } else if (sortBy.equals("Waktu Pendaftaran")) {
            data046 = sortByWaktuPendaftaran(data046);
        } else if (sortBy.equals("Waktu Penyuntingan")) {
            data046 = sortByWaktuPenyuntingan(data046);
        } else {
            sortByComboBox046.setSelectedIndex(0); // reset ke NIM
            return;
        }
        DefaultTableModel model046 = (DefaultTableModel) mahasiswaTable046.getModel();
        model046.setRowCount(0);
        int no046 = 0;
        for (Map<String, String> user046 : data046) {
            if (search.equals("")
                    || (user046.get("nim").toLowerCase().contains(search.toLowerCase())
                            || user046.get("nama").toLowerCase().contains(search.toLowerCase())
                            || user046.get("jurusan").toLowerCase().contains(search.toLowerCase())
                            || user046.get("asalSekolah").toLowerCase().contains(search.toLowerCase())
                            || user046.get("waktuPendaftaran").toLowerCase().contains(search.toLowerCase())
                            || (!user046.get("waktuPenyuntingan").equals("-") &&
                                    user046.get("waktuPenyuntingan").toLowerCase().contains(search.toLowerCase())))) {

                model046.addRow(new Object[] {
                        ++no046,
                        user046.get("nim"),
                        user046.get("nama"),
                        user046.get("jurusan"),
                        user046.get("asalSekolah"),
                        user046.get("waktuPendaftaran"),
                        user046.get("waktuPenyuntingan")
                });
            }
        }
    }

    private ArrayList<Map<String, String>> sortByNim(ArrayList<Map<String, String>> data) {
        data.sort(Comparator.comparing(dt046 -> dt046.get("nim")));
        return data;
    }

    private ArrayList<Map<String, String>> sortByNama(ArrayList<Map<String, String>> data) {
        data.sort(Comparator.comparing(dt046 -> dt046.get("nama")));
        return data;
    }

    private ArrayList<Map<String, String>> sortByJurusan(ArrayList<Map<String, String>> data) {
        data.sort(Comparator.comparing(dt046 -> dt046.get("jurusan")));
        return data;
    }

    private ArrayList<Map<String, String>> sortByAsalSekolah(ArrayList<Map<String, String>> data) {
        data.sort(Comparator.comparing(dt046 -> dt046.get("asalSekolah")));
        return data;
    }

    private ArrayList<Map<String, String>> sortByWaktuPendaftaran(ArrayList<Map<String, String>> data) {
        data.sort(Comparator.comparing(dt046 -> dt046.get("waktuPendaftaran")));
        return data;
    }

    private ArrayList<Map<String, String>> sortByWaktuPenyuntingan(ArrayList<Map<String, String>> data) {
        DateTimeFormatter formatter046 = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");

        data.sort((a, b) -> {
            String valA046 = a.get("waktuPenyuntingan");
            String valB046 = b.get("waktuPenyuntingan");

            boolean isDashA046 = valA046.equals("-");
            boolean isDashB046 = valB046.equals("-");

            if (isDashA046 && isDashB046)
                return 0; // dua-duanya "-"
            if (isDashA046)
                return 1; // A "-" → di bawah
            if (isDashB046)
                return -1; // B "-" → di bawah

            try {
                LocalDateTime timeA046 = LocalDateTime.parse(valA046, formatter046);
                LocalDateTime timeB046 = LocalDateTime.parse(valB046, formatter046);
                return timeA046.compareTo(timeB046); // ascending
            } catch (DateTimeParseException e) {
                return 0; // kalau gagal parsing, anggap setara
            }
        });

        return data;
    }
}
